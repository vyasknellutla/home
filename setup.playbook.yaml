---
- name: "Software Updates"
  hosts: localhost
  connection: local
  become_method: sudo
  tasks:
    # Python Dependencies
    - pip:
        name:
          - pipenv
          - ansible
        extra_args: --user

    # System Upgrade
    - name: Upgrade all installed packages for Debian and Ubuntu
      become: true
      apt:
        name: "*"
        state: latest
        update_cache: true
        force_apt_get: true
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
    - name: Upgrade all installed packages on openSUSE
      become: true
      zypper:
        name: "*"
        state: latest
      when: ansible_distribution == "openSUSE Leap"
    - name: Update all installed packages for CentOS
      become: true
      yum:
        name: "*"
        state: latest
        update_cache: true
      when: ansible_distribution == "CentOS" or ansible_distribution == "Fedora"
    - name: Upgrade all installed packages on Fedora
      become: true
      dnf:
        name: "*"
        state: latest
        update_cache: true
      when: ansible_distribution == "Fedora"

    # dotfiles repository
    - name: Check if dotfiles is cloned
      stat:
        path: ~/.git/
      register: dotfiles_git_dir

    - name: If dotfiles isn't cloned, install dotfiles
      shell: | #!/bin/sh
        git init "${HOME}"
        git remote add origin https://github.com/vyasknellutla/dotfiles.git
        git fetch origin
        git checkout --force -b master --track origin/master
      when: dotfiles_git_dir.stat.isdir is not defined
    - name: Check that dotfiles is cloned
      git:
        repo: "https://github.com/vyasknellutla/dotfiles.git"
        dest: ~/
        update: false

    # Homebrew
    - name: Workaround for cask sudo permissions
      shell: echo 'sudo'
      become: true
    - name: Upgrades all Homebrew Casks except those tagged with 'latest'
      shell: | #!/bin/sh
        set -e
        set -u
        set -x

        brew bundle --global --verbose
        # TODO when mac app store sign-in issue is resolved
        # brew bundle cleanup --global --force
        brew cask upgrade $(brew cask outdated --greedy --verbose | { grep -v 'latest' || true } | cut -d' ' -f1)
      when: ansible_distribution == "MacOSX"

    # Symlinks
    - name: Create Symlinks
      file:
        src: "{{ lookup('env','HOME') }}/{{ item.src }}"
        dest: "{{ lookup('env','HOME') }}/{{ item.dest }}"
        state: link
        force: true
      loop:
        # direnv
        - { src: ".profile", dest: ".config/direnv/direnvrc" }
        # bash
        - { src: ".profile", dest: ".bashrc" }
        - { src: ".profile", dest: ".bash_profile" }
        - { src: ".logout", dest: ".bash_logout" }
        # zsh
        - { src: ".profile", dest: ".login" }
        - { src: ".profile", dest: ".zprofile" }
        - { src: ".profile", dest: ".zshrc" }
        # gnupg
        # - { src: ".config/gnupg", dest: ".gnupg" }
        # Hyper Terminal
        - { src: ".config/Hyper/.hyper.js", dest: ".hyper.js" }
        # VS Code
        # - { src: ".config/Code/User", dest: ".vscode-server/data/Machine" }

    # Empty files
    - name: Create empty files
      file:
        path: "{{ item.file_name }}"
        state: touch
        modification_time: preserve
        access_time: preserve
      loop:
        - { file_name: ".cloud-locale-test.skip" }
        - { file_name: ".sudo_as_admin_successful" }